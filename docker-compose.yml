version: "3.9-slim"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - VITE_SUPABASE_SECRET_ROLE=${VITE_SUPABASE_SECRET_ROLE}
      - VITE_OPENAI_KEY=${VITE_OPENAI_KEY}
      - VITE_CESIUM_KEY=${VITE_CESIUM_KEY}
      - VITE_OPENWEATHER_API_KEY=${VITE_OPENWEATHER_API_KEY}
      
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_healthy
      agent:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - mntr_network

  db:
    image: postgres:17
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mntr_network

  api:
    build:
      context: ./Backend/API
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./Backend/API:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mntr_network

  agent:
    build:
      context: ./Backend/Agent
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LANGSMITH_ENDPOINT=${LANGSMITH_ENDPOINT}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_healthy
    volumes:
      - ./Backend/Agent:/app
    networks:
      - mntr_network

volumes:
  postgres_data:

networks:
  mntr_network:
    driver: bridge