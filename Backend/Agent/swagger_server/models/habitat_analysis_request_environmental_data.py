# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class HabitatAnalysisRequestEnvironmentalData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, temperature: Object=None, rainfall: Object=None, vegetation_index: Object=None, soil_moisture: Object=None, elevation: Object=None):  # noqa: E501
        """HabitatAnalysisRequestEnvironmentalData - a model defined in Swagger

        :param temperature: The temperature of this HabitatAnalysisRequestEnvironmentalData.  # noqa: E501
        :type temperature: Object
        :param rainfall: The rainfall of this HabitatAnalysisRequestEnvironmentalData.  # noqa: E501
        :type rainfall: Object
        :param vegetation_index: The vegetation_index of this HabitatAnalysisRequestEnvironmentalData.  # noqa: E501
        :type vegetation_index: Object
        :param soil_moisture: The soil_moisture of this HabitatAnalysisRequestEnvironmentalData.  # noqa: E501
        :type soil_moisture: Object
        :param elevation: The elevation of this HabitatAnalysisRequestEnvironmentalData.  # noqa: E501
        :type elevation: Object
        """
        self.swagger_types = {
            'temperature': Object,
            'rainfall': Object,
            'vegetation_index': Object,
            'soil_moisture': Object,
            'elevation': Object
        }

        self.attribute_map = {
            'temperature': 'temperature',
            'rainfall': 'rainfall',
            'vegetation_index': 'vegetation_index',
            'soil_moisture': 'soil_moisture',
            'elevation': 'elevation'
        }
        self._temperature = temperature
        self._rainfall = rainfall
        self._vegetation_index = vegetation_index
        self._soil_moisture = soil_moisture
        self._elevation = elevation

    @classmethod
    def from_dict(cls, dikt) -> 'HabitatAnalysisRequestEnvironmentalData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HabitatAnalysisRequest_environmental_data of this HabitatAnalysisRequestEnvironmentalData.  # noqa: E501
        :rtype: HabitatAnalysisRequestEnvironmentalData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def temperature(self) -> Object:
        """Gets the temperature of this HabitatAnalysisRequestEnvironmentalData.

        Average temperature in degrees Celsius.  # noqa: E501

        :return: The temperature of this HabitatAnalysisRequestEnvironmentalData.
        :rtype: Object
        """
        return self._temperature

    @temperature.setter
    def temperature(self, temperature: Object):
        """Sets the temperature of this HabitatAnalysisRequestEnvironmentalData.

        Average temperature in degrees Celsius.  # noqa: E501

        :param temperature: The temperature of this HabitatAnalysisRequestEnvironmentalData.
        :type temperature: Object
        """

        self._temperature = temperature

    @property
    def rainfall(self) -> Object:
        """Gets the rainfall of this HabitatAnalysisRequestEnvironmentalData.

        Average monthly rainfall in millimeters.  # noqa: E501

        :return: The rainfall of this HabitatAnalysisRequestEnvironmentalData.
        :rtype: Object
        """
        return self._rainfall

    @rainfall.setter
    def rainfall(self, rainfall: Object):
        """Sets the rainfall of this HabitatAnalysisRequestEnvironmentalData.

        Average monthly rainfall in millimeters.  # noqa: E501

        :param rainfall: The rainfall of this HabitatAnalysisRequestEnvironmentalData.
        :type rainfall: Object
        """

        self._rainfall = rainfall

    @property
    def vegetation_index(self) -> Object:
        """Gets the vegetation_index of this HabitatAnalysisRequestEnvironmentalData.

        Normalized vegetation index score (0 to 1 scale).  # noqa: E501

        :return: The vegetation_index of this HabitatAnalysisRequestEnvironmentalData.
        :rtype: Object
        """
        return self._vegetation_index

    @vegetation_index.setter
    def vegetation_index(self, vegetation_index: Object):
        """Sets the vegetation_index of this HabitatAnalysisRequestEnvironmentalData.

        Normalized vegetation index score (0 to 1 scale).  # noqa: E501

        :param vegetation_index: The vegetation_index of this HabitatAnalysisRequestEnvironmentalData.
        :type vegetation_index: Object
        """

        self._vegetation_index = vegetation_index

    @property
    def soil_moisture(self) -> Object:
        """Gets the soil_moisture of this HabitatAnalysisRequestEnvironmentalData.

        Soil moisture level as a percentage (0-100%).  # noqa: E501

        :return: The soil_moisture of this HabitatAnalysisRequestEnvironmentalData.
        :rtype: Object
        """
        return self._soil_moisture

    @soil_moisture.setter
    def soil_moisture(self, soil_moisture: Object):
        """Sets the soil_moisture of this HabitatAnalysisRequestEnvironmentalData.

        Soil moisture level as a percentage (0-100%).  # noqa: E501

        :param soil_moisture: The soil_moisture of this HabitatAnalysisRequestEnvironmentalData.
        :type soil_moisture: Object
        """

        self._soil_moisture = soil_moisture

    @property
    def elevation(self) -> Object:
        """Gets the elevation of this HabitatAnalysisRequestEnvironmentalData.

        Elevation of the region in meters.  # noqa: E501

        :return: The elevation of this HabitatAnalysisRequestEnvironmentalData.
        :rtype: Object
        """
        return self._elevation

    @elevation.setter
    def elevation(self, elevation: Object):
        """Sets the elevation of this HabitatAnalysisRequestEnvironmentalData.

        Elevation of the region in meters.  # noqa: E501

        :param elevation: The elevation of this HabitatAnalysisRequestEnvironmentalData.
        :type elevation: Object
        """

        self._elevation = elevation
