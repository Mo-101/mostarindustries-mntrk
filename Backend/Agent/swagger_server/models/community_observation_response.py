# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CommunityObservationResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, submission_id: Object=None, review_status: Object=None):  # noqa: E501
        """CommunityObservationResponse - a model defined in Swagger

        :param submission_id: The submission_id of this CommunityObservationResponse.  # noqa: E501
        :type submission_id: Object
        :param review_status: The review_status of this CommunityObservationResponse.  # noqa: E501
        :type review_status: Object
        """
        self.swagger_types = {
            'submission_id': Object,
            'review_status': Object
        }

        self.attribute_map = {
            'submission_id': 'submission_id',
            'review_status': 'review_status'
        }
        self._submission_id = submission_id
        self._review_status = review_status

    @classmethod
    def from_dict(cls, dikt) -> 'CommunityObservationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CommunityObservationResponse of this CommunityObservationResponse.  # noqa: E501
        :rtype: CommunityObservationResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def submission_id(self) -> Object:
        """Gets the submission_id of this CommunityObservationResponse.

        Unique identifier for the submitted observation.  # noqa: E501

        :return: The submission_id of this CommunityObservationResponse.
        :rtype: Object
        """
        return self._submission_id

    @submission_id.setter
    def submission_id(self, submission_id: Object):
        """Sets the submission_id of this CommunityObservationResponse.

        Unique identifier for the submitted observation.  # noqa: E501

        :param submission_id: The submission_id of this CommunityObservationResponse.
        :type submission_id: Object
        """

        self._submission_id = submission_id

    @property
    def review_status(self) -> Object:
        """Gets the review_status of this CommunityObservationResponse.

        Status of the observation review process.  # noqa: E501

        :return: The review_status of this CommunityObservationResponse.
        :rtype: Object
        """
        return self._review_status

    @review_status.setter
    def review_status(self, review_status: Object):
        """Sets the review_status of this CommunityObservationResponse.

        Status of the observation review process.  # noqa: E501

        :param review_status: The review_status of this CommunityObservationResponse.
        :type review_status: Object
        """

        self._review_status = review_status
