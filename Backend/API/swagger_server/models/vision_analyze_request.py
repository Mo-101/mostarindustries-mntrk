# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class VisionAnalyzeRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, image: Object=None, confidence_threshold: Object=None):  # noqa: E501
        """VisionAnalyzeRequest - a model defined in Swagger

        :param image: The image of this VisionAnalyzeRequest.  # noqa: E501
        :type image: Object
        :param confidence_threshold: The confidence_threshold of this VisionAnalyzeRequest.  # noqa: E501
        :type confidence_threshold: Object
        """
        self.swagger_types = {
            'image': Object,
            'confidence_threshold': Object
        }

        self.attribute_map = {
            'image': 'image',
            'confidence_threshold': 'confidence_threshold'
        }
        self._image = image
        self._confidence_threshold = confidence_threshold

    @classmethod
    def from_dict(cls, dikt) -> 'VisionAnalyzeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VisionAnalyzeRequest of this VisionAnalyzeRequest.  # noqa: E501
        :rtype: VisionAnalyzeRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image(self) -> Object:
        """Gets the image of this VisionAnalyzeRequest.


        :return: The image of this VisionAnalyzeRequest.
        :rtype: Object
        """
        return self._image

    @image.setter
    def image(self, image: Object):
        """Sets the image of this VisionAnalyzeRequest.


        :param image: The image of this VisionAnalyzeRequest.
        :type image: Object
        """

        self._image = image

    @property
    def confidence_threshold(self) -> Object:
        """Gets the confidence_threshold of this VisionAnalyzeRequest.


        :return: The confidence_threshold of this VisionAnalyzeRequest.
        :rtype: Object
        """
        return self._confidence_threshold

    @confidence_threshold.setter
    def confidence_threshold(self, confidence_threshold: Object):
        """Sets the confidence_threshold of this VisionAnalyzeRequest.


        :param confidence_threshold: The confidence_threshold of this VisionAnalyzeRequest.
        :type confidence_threshold: Object
        """

        self._confidence_threshold = confidence_threshold
