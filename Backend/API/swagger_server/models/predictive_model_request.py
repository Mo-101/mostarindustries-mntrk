# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.habitat_analysis_request_environmental_data import HabitatAnalysisRequestEnvironmentalData  # noqa: F401,E501
from swagger_server import util


class PredictiveModelRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, model_type: Object=None, input_features: HabitatAnalysisRequestEnvironmentalData=None, output_type: Object=None):  # noqa: E501
        """PredictiveModelRequest - a model defined in Swagger

        :param model_type: The model_type of this PredictiveModelRequest.  # noqa: E501
        :type model_type: Object
        :param input_features: The input_features of this PredictiveModelRequest.  # noqa: E501
        :type input_features: HabitatAnalysisRequestEnvironmentalData
        :param output_type: The output_type of this PredictiveModelRequest.  # noqa: E501
        :type output_type: Object
        """
        self.swagger_types = {
            'model_type': Object,
            'input_features': HabitatAnalysisRequestEnvironmentalData,
            'output_type': Object
        }

        self.attribute_map = {
            'model_type': 'model_type',
            'input_features': 'input_features',
            'output_type': 'output_type'
        }
        self._model_type = model_type
        self._input_features = input_features
        self._output_type = output_type

    @classmethod
    def from_dict(cls, dikt) -> 'PredictiveModelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PredictiveModelRequest of this PredictiveModelRequest.  # noqa: E501
        :rtype: PredictiveModelRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_type(self) -> Object:
        """Gets the model_type of this PredictiveModelRequest.

        The predictive model to use  # noqa: E501

        :return: The model_type of this PredictiveModelRequest.
        :rtype: Object
        """
        return self._model_type

    @model_type.setter
    def model_type(self, model_type: Object):
        """Sets the model_type of this PredictiveModelRequest.

        The predictive model to use  # noqa: E501

        :param model_type: The model_type of this PredictiveModelRequest.
        :type model_type: Object
        """

        self._model_type = model_type

    @property
    def input_features(self) -> HabitatAnalysisRequestEnvironmentalData:
        """Gets the input_features of this PredictiveModelRequest.


        :return: The input_features of this PredictiveModelRequest.
        :rtype: HabitatAnalysisRequestEnvironmentalData
        """
        return self._input_features

    @input_features.setter
    def input_features(self, input_features: HabitatAnalysisRequestEnvironmentalData):
        """Sets the input_features of this PredictiveModelRequest.


        :param input_features: The input_features of this PredictiveModelRequest.
        :type input_features: HabitatAnalysisRequestEnvironmentalData
        """

        self._input_features = input_features

    @property
    def output_type(self) -> Object:
        """Gets the output_type of this PredictiveModelRequest.

        Type of prediction output  # noqa: E501

        :return: The output_type of this PredictiveModelRequest.
        :rtype: Object
        """
        return self._output_type

    @output_type.setter
    def output_type(self, output_type: Object):
        """Sets the output_type of this PredictiveModelRequest.

        Type of prediction output  # noqa: E501

        :param output_type: The output_type of this PredictiveModelRequest.
        :type output_type: Object
        """

        self._output_type = output_type
